
import java.awt.Desktop;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.event.MenuEvent;
import javax.swing.event.MenuListener;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Acer
 */

public class CAD_INFO extends javax.swing.JFrame implements ActionListener, KeyListener, MenuListener  {

    ArrayList <String> main = new ArrayList<>();
    ArrayList <String> sort = new ArrayList<>();
    /**
     * Creates new form CAD_INFO
     */
    public CAD_INFO() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jSplitPane2 = new javax.swing.JSplitPane();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jRadioButtonMenuItem1 = new javax.swing.JRadioButtonMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        search_field_price = new javax.swing.JTextField();
        search_price = new javax.swing.JButton();
        address = new javax.swing.JTextField();
        price = new javax.swing.JTextField();
        last_servicing = new javax.swing.JTextField();
        chassis_number = new javax.swing.JTextField();
        drove = new javax.swing.JComboBox();
        bike_number = new javax.swing.JTextField();
        b = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        c = new javax.swing.JRadioButton();
        d = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        phone_number = new javax.swing.JTextField();
        a = new javax.swing.JRadioButton();
        add = new javax.swing.JButton();
        clear = new javax.swing.JButton();
        exit = new javax.swing.JButton();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        search_field_model = new javax.swing.JTextField();
        search_model = new javax.swing.JButton();
        name_label = new javax.swing.JLabel();
        age_label = new javax.swing.JLabel();
        address_label = new javax.swing.JLabel();
        pno_label = new javax.swing.JLabel();
        model_label = new javax.swing.JLabel();
        bike_no_label = new javax.swing.JLabel();
        drove_label = new javax.swing.JLabel();
        chasno_label = new javax.swing.JLabel();
        service_label = new javax.swing.JLabel();
        price_label = new javax.swing.JLabel();
        age = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        file = new javax.swing.JMenu();
        open_button = new javax.swing.JMenuItem();
        exit_button = new javax.swing.JMenuItem();
        Help = new javax.swing.JMenu();
        help_button = new javax.swing.JMenuItem();

        jRadioButtonMenuItem1.setSelected(true);
        jRadioButtonMenuItem1.setText("jRadioButtonMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Sohail ", "19", "Banasthali", "9861282607", "Vitpilen 401", "9821", "1000-2500", "1234", "01/01/2020", "1000"},
                {"Prasanna", "18", "Banasthali", "9813019281", "Vitpilen 701", "1234", "1000-2500", "876543", "02/09/2019", "4000"},
                {"Sai", "20", "Samakhusi", "1029384756", "Vitpilen 401", "3214", "2500-4000", "654324", "01/11/2020", "2000"},
                {"Cyrus", "18", "Kapan", "2102910101", "Vitpilen 401", "1242", "1000-2500", "5342", "09/01/2021", "1200"},
                {"Saugat", "30", "Samakhusi", "1021921831", "Vitpilen 401", "5431", "8000-12000", "5432", "22/04/2020", "10000"},
                {"Image", "18", "Swayambhu", "5739173912", "Vitpilen 401", "7654", "4000-8000", "6543", "11/11/2020", "1900"},
                {"Binil", "18", "Sano Bharayang", "1849291817", "Vitpilen 701", "8765", "1000-2500", "65432", "01/01/2015", "2500"},
                {"Mohit", "21", "Boudha", "5433245422", "Vitpilen 701", "9876", "4000-8000", "5643", "30/12/2020", "500"},
                {"Anish", "25", "Dhapasi", "9876543210", "Vitpilen 701", "2312", "8000-12000", "76543", "03/07/2020", "1000"},
                {"Aakriti", "27", "Kirtipur", "6543267890", "Vitpilen 701", "9812", "1000-2500", "32456", "25/01/2020", "1200"},
                {"Riju", "28", "Baneshwor", "9843267892", "Vitpilen 401", "3421", "4000-8000", "746235", "19/01/2015", "15000"},
                {"Aashish", "30", "Baneshwor", "3456234233", "Vitpilen 401", "5790", "1000-2500", "7462", "13/01/2016", "2000"},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Name", "Age", "Address", "Phone no.", "Bike Model Name", "Bike number", "Kms drove", "Chassis number", "Last Servicing", "Price"
            }
        ));
        jScrollPane1.setViewportView(jTable);

        jLabel21.setText(" Search by price:");

        search_price.setText("Go");
        search_price.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_priceActionPerformed(evt);
            }
        });

        address.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                addressKeyPressed(evt);
            }
        });

        price.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priceActionPerformed(evt);
            }
        });
        price.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                priceKeyPressed(evt);
            }
        });

        last_servicing.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                last_servicingActionPerformed(evt);
            }
        });
        last_servicing.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                last_servicingKeyPressed(evt);
            }
        });

        chassis_number.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                chassis_numberKeyPressed(evt);
            }
        });

        drove.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Kms", "0-1000", "1000-2500", "2500-4000", "4000-8000", "8000-12000" }));

        bike_number.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                bike_numberKeyPressed(evt);
            }
        });

        buttonGroup1.add(b);
        b.setText("Svartpilen 401");

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel2.setText("Age");

        name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameActionPerformed(evt);
            }
        });
        name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nameKeyPressed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel1.setText("Name");

        jLabel5.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel5.setText("Bike Model name");

        jLabel6.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel6.setText("Bike no");

        jLabel7.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel7.setText("Kms drove");

        jLabel9.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel9.setText("Chassis no.");

        jLabel10.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel10.setText("Last Servicing");

        jLabel19.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel19.setText("Price");

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel3.setText("Address");

        buttonGroup1.add(c);
        c.setText("Vitpilen 701");

        buttonGroup1.add(d);
        d.setText("Svartpilen 701");

        jLabel4.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel4.setText("Phone no.");

        phone_number.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                phone_numberKeyPressed(evt);
            }
        });

        buttonGroup1.add(a);
        a.setText("Vitpilen 401");
        a.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aActionPerformed(evt);
            }
        });

        add.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        add.setText("Add");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        clear.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        clear.setText("Clear");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        exit.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        exit.setText("Exit");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel22.setText("BIke Information");

        jLabel23.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel23.setText("Personal Information");

        jLabel24.setText("Search by Bike Model:");

        search_field_model.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_field_modelActionPerformed(evt);
            }
        });

        search_model.setText("Go");
        search_model.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_modelActionPerformed(evt);
            }
        });

        name_label.setFont(new java.awt.Font("Dialog", 1, 13)); // NOI18N

        age_label.setFont(new java.awt.Font("Dialog", 1, 13)); // NOI18N

        address_label.setFont(new java.awt.Font("Dialog", 1, 13)); // NOI18N

        pno_label.setFont(new java.awt.Font("Dialog", 1, 13)); // NOI18N

        model_label.setFont(new java.awt.Font("Dialog", 1, 13)); // NOI18N

        bike_no_label.setFont(new java.awt.Font("Dialog", 1, 13)); // NOI18N

        drove_label.setFont(new java.awt.Font("Dialog", 1, 13)); // NOI18N

        chasno_label.setFont(new java.awt.Font("Dialog", 1, 13)); // NOI18N

        service_label.setFont(new java.awt.Font("Dialog", 1, 13)); // NOI18N

        price_label.setFont(new java.awt.Font("Dialog", 1, 13)); // NOI18N

        age.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ageKeyPressed(evt);
            }
        });

        file.setText("File");

        open_button.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        open_button.setText("Open");
        open_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                open_buttonActionPerformed(evt);
            }
        });
        file.add(open_button);

        exit_button.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        exit_button.setText("Exit");
        exit_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exit_buttonActionPerformed(evt);
            }
        });
        file.add(exit_button);

        jMenuBar1.add(file);

        Help.setText("Help");

        help_button.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.CTRL_MASK));
        help_button.setText("Help");
        help_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                help_buttonActionPerformed(evt);
            }
        });
        Help.add(help_button);

        jMenuBar1.add(Help);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(90, 90, 90)
                .addComponent(jLabel8)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(315, 315, 315)
                        .addComponent(jLabel11)
                        .addGap(671, 671, 671)
                        .addComponent(jLabel12))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel23)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel1))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(address)
                                        .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(name_label)
                                    .addComponent(address_label))
                                .addGap(54, 54, 54)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(phone_number, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(age_label)
                                            .addComponent(pno_label)
                                            .addComponent(age, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel10)
                                    .addGap(86, 86, 86)
                                    .addComponent(last_servicing))
                                .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGap(175, 175, 175)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(chasno_label)
                                        .addComponent(drove, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel9)
                                    .addGap(101, 101, 101)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(service_label)
                                        .addComponent(chassis_number, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel19)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(price_label)
                                            .addGap(353, 353, 353))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(add)
                                                .addGap(12, 12, 12)
                                                .addComponent(clear)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(exit))
                                            .addComponent(price, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addComponent(jLabel22)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(67, 67, 67)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(model_label)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(a)
                                        .addGap(18, 18, 18)
                                        .addComponent(b)
                                        .addGap(30, 30, 30)
                                        .addComponent(c)
                                        .addGap(18, 18, 18)
                                        .addComponent(d))
                                    .addComponent(bike_no_label)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(128, 128, 128)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(drove_label)
                                    .addComponent(bike_number, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(78, 78, 78)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(166, 166, 166)
                        .addComponent(jLabel20)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addComponent(jLabel15)
                    .addComponent(jLabel16)
                    .addComponent(jLabel17)
                    .addComponent(jLabel18)))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(search_field_model))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(search_model)
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(search_field_price, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(search_price)
                .addGap(31, 31, 31))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(jLabel24))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(search_field_price, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(search_price)
                    .addComponent(search_field_model, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(search_model))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel23)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12))))
                .addComponent(jLabel14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(age_label)
                            .addComponent(name_label))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel1)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel2))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(age, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(address_label)
                            .addComponent(pno_label))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(address, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(phone_number, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33)
                        .addComponent(jLabel22)
                        .addGap(25, 25, 25)
                        .addComponent(model_label)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(a)
                            .addComponent(b)
                            .addComponent(c)
                            .addComponent(d))
                        .addGap(12, 12, 12)
                        .addComponent(bike_no_label)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(bike_number, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(drove_label)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(drove, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chasno_label)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(chassis_number, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(service_label)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(last_servicing, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(price_label)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel19)
                            .addComponent(price, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(79, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel16)
                        .addGap(104, 104, 104)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel17)
                                .addGap(27, 27, 27)
                                .addComponent(jLabel18))
                            .addComponent(jLabel20)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(add)
                            .addComponent(clear)
                            .addComponent(exit))
                        .addGap(25, 25, 25))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

//Method that sorts the arraylist im ascending order
    public int sort(ArrayList <String> sorted, String x){
        for (int i=9; i<sorted.size(); i=i+10){
            int l=i;
            int r=sorted.size()-1;
            while (l <= r) { 
            int m = l + (r - l) / 2; 
  
            int res = x.compareTo(sorted.get(m)); 
  
            // Check if x is present at mid 
            if (res == 0){ 
                return m;              
            }
            // If x greater, ignore left half 
            if (res > 0){
                l = m + 1; 
            }
            // If x is smaller, ignore right half 
            else{
                r = m - 1; 
            }                
        } 
        }
        return -1;
    }
    
    public void add_file(){
        //        checking for empty column.
        int rowCount = jTable.getRowCount();
        int colCount = jTable.getColumnCount();  
        int nextRow = 0;
        int i;
        boolean empty = false; //row is empty, data can be added.
        do {
            String s= (String) jTable.getValueAt(nextRow,0);
            if (s != null && s.length()!=0){
                nextRow++;
            } else {
                empty = true;
            }
        } while (nextRow < rowCount && !empty);   
            
//            setting values in the table
        int newCount = 0;
        for (i=0; i<main.size();i++){
            if(i<colCount){
                jTable.setValueAt(main.get(i), nextRow, i);
            }
            if(i==(colCount-1))
                nextRow++;
            if(i>=colCount){
                System.out.println(i);
                jTable.setValueAt(main.get(i), nextRow, newCount);
                newCount ++;
            }            
        }  
                                             
    }
    
    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        // TODO add your handling code here:
        
//        Code to clear all the values for the text fields
        name.setText("");        
        age.setText("");
        address.setText("");
        phone_number.setText("");
        bike_number.setText("");
        drove.setSelectedIndex(0);
        chassis_number.setText("");
        last_servicing.setText("");   
        price.setText("");    
        buttonGroup1.clearSelection();
        
//        Code to clear the error labels if any has been activated while giving the values to the textfields.
        
        price_label.setText("");
        service_label.setText("");
        chasno_label.setText("");
        drove_label.setText("");
        bike_no_label.setText("");
        model_label.setText("");
        pno_label.setText("");
        address_label.setText("");
        age_label.setText("");
        name_label.setText("");
    }//GEN-LAST:event_clearActionPerformed

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        // TODO add your handling code here:
        
//        Code to clear the error labels after all the values are added to the table.
        price_label.setText("");
        service_label.setText("");
        chasno_label.setText("");
        drove_label.setText("");
        bike_no_label.setText("");
        model_label.setText("");
        pno_label.setText("");
        address_label.setText("");
        age_label.setText("");
        name_label.setText("");
        
//        Retrieving and adding all the values from the textfields.
        String Name = name.getText();
        String Age = (String) age.getText();
        String Address = address.getText();
        String Phone_no = phone_number.getText();
        String Bike_no = bike_number.getText();
        String Drove = (String) drove.getSelectedItem();
        String Chassis_no = chassis_number.getText();
        String Last_servicing = last_servicing.getText(); 
        String Price = price.getText(); 
        
//        Checking for any empty textfields. If any textfields are found, then an error message is sent to tell the user about the empty field. 
//        If all fields are filled with the values, then all the values are added to an arraylist.
        if (!Name.equals("")){
            if (!Age.equals("")){
                    if (!Address.equals("")){
                    if (!Phone_no.equals("") ){
                            if (a.isSelected() || b.isSelected() || c.isSelected() || d.isSelected()){
                            if (!Bike_no.equals("")){
                                if (!Drove.equals("Select Kms")){
                                    if (!Chassis_no.equals("")){
                                            if (!Last_servicing.equals("")){
                                            if (!Price.equals("")){      
                                                
//                                                Adding values to an arraylist named main.
                                                    main.add(Name);       
                                                    main.add(Age);        
                                                    main.add(Address);
                                                    main.add(Phone_no);
                                                    if (a.isSelected()){
                                                        main.add(a.getText());                                             
                                                    } else if (b.isSelected()){                                                                                      
                                                        main.add(b.getText()); 
                                                    } else if (c.isSelected()){
                                                        main.add(c.getText());  
                                                    } else if (d.isSelected()){
                                                        main.add(d.getText());    
                                                    }                                                    
                                                    main.add(Bike_no);        
                                                    main.add(Drove);       
                                                    main.add(Chassis_no);
                                                    main.add(Last_servicing); 
                                                    main.add(Price);

                                                    //        checking for empty column in the table.
                                                    int rowCount = jTable.getRowCount();
                                                    int colCount = jTable.getColumnCount(); 
                                                    int nextRow = 0;
                                                    int i;
                                                    boolean empty = false; 
                                                    
//                                                    The Do While loop will run until the value of empty becomes true.
                                                    do {
                                                        String s= (String) jTable.getValueAt(nextRow,0);
                                                        if (s != null && s.length()!=0){
                                                            nextRow++;
                                                        } else {
                                                            empty = true;
                                                        }
                                                    } while (nextRow < rowCount && !empty);                                                    
                                                    //            the values are retrieved from the arraylist and are set in the table.
                                                    for (int j=9;j<main.size();j=j+9){
                                                        for (i=0; i<colCount;i++){
                                                            jTable.setValueAt(main.get(i), nextRow, i);  
                                                        }                                                                                                          
                                                    }                             
                                                    
                                                    //      clearing value from array       
                                                    main.clear();
                                                    
//                                                   setting all the values of textField, buttongroup and combobox to null.      
                                                    name.setText("");                                                        
                                                    age.setText("");
                                                    address.setText("");
                                                    phone_number.setText("");
                                                    bike_number.setText("");
                                                    drove.setSelectedIndex(0);
                                                    chassis_number.setText("");
                                                    last_servicing.setText("");                                            
                                                    price.setText("");        
                                                    buttonGroup1.clearSelection();
                                            } else {
//                                                if the textfield is null, an error msg is sent to the user.
                                                price_label.setText("Give price");
                                            }                                            
                                        } else {
//                                                 if the textfield is null, an error msg is sent to the user.
                                            service_label.setText("Give Last Servicing Date");
                                        }
                                        
                                    } else {
//                                         if the textfield is null, an error msg is sent to the user.
                                        chasno_label.setText("Give Chassis number");
                                    }
                                } else {
//                                     if the textfield is null, an error msg is sent to the user.
                                    drove_label.setText("Select Kms drove");
                                }
                            } else {
//                                 if the textfield is null, an error msg is sent to the user.
                                bike_no_label.setText("Give bike number");
                            }
                        } else {
//                                 if the textfield is null, an error msg is sent to the user.
                            model_label.setText("Give bike model");
                        }
                    } else {
//                         if the textfield is null, an error msg is sent to the user.
                        pno_label.setText("Give phone number");
                    }
                } else {
//                         if the textfield is null, an error msg is sent to the user.
                    address_label.setText("Give adddress");
                }
                
            } else {
//                 if the textfield is null, an error msg is sent to the user.
                age_label.setText("Give age");
            }
        } else {
//             if the textfield is null, an error msg is sent to the user.
            name_label.setText("Give name");
        }
        
        
       
   
    }//GEN-LAST:event_addActionPerformed

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        // TODO add your handling code here:    
//        when the button is clicked, the program is closed.
        System.exit(0);
    }//GEN-LAST:event_exitActionPerformed

    private void search_priceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_priceActionPerformed
        // TODO add your handling code here:
        
//        This is binary search
        int rowCount = jTable.getRowCount();
        int colCount = jTable.getColumnCount(); 
        int nextRow = 0;
        int nextCol = 0;
        boolean empty = false; //row is empty, data can be added.
        
        //all the values from the tables are stored in the sort arraylist.
        do {
            
            String a= (String) jTable.getValueAt(nextRow,nextCol); 
            if (a != null && a.length()!=0){
                for (int i=0; i<10;i++){
                    String w= (String) jTable.getValueAt(nextRow,i);
                    sort.add(w);                
                }
                nextRow++;
            } else {
                empty = true;
            }
        } while (nextRow < rowCount && !empty);  
//the arraylist is sorted by checking all the prices.
        for (int i=9; i<sort.size();i=i+10){  
//            the minimum value is chcek with all the other values from price.if the value minimum value is greater than the max value, then they are swapped.
//            If the minimum value is smaller than the max value, then they are not swapped.
            for (int j = sort.size() - 1; j > i; j=j-10) {
                int x= Integer.parseInt(sort.get(i));
                int y= Integer.parseInt(sort.get(j));
                if (x > y) {
                    int tmp = x;
                    sort.set(i,String.valueOf(y));                    
                    sort.set(j,String.valueOf(tmp));
                    
                    String tmp1 = sort.get(i-1);
                    sort.set(i-1,sort.get(j-1));                    
                    sort.set(j-1,tmp1);
                    
                    String tmp2 = sort.get(i-2);
                    sort.set(i-2,sort.get(j-2));                    
                    sort.set(j-2,tmp2);
                    
                    String tmp3 = sort.get(i-3);
                    sort.set(i-3,sort.get(j-3));                    
                    sort.set(j-3,tmp3);
                    
                    String tmp4 = sort.get(i-4);
                    sort.set(i-4,sort.get(j-4));                    
                    sort.set(j-4,tmp4);
                    
                    String tmp5 = sort.get(i-5);
                    sort.set(i-5,sort.get(j-5));                    
                    sort.set(j-5,tmp5);
                    
                    String tmp6 = sort.get(i-6);
                    sort.set(i-6,sort.get(j-6));                    
                    sort.set(j-6,tmp6);
                    
                    String tmp7 = sort.get(i-7);
                    sort.set(i-7,sort.get(j-7));                    
                    sort.set(j-7,tmp7);
                    
                    String tmp8 = sort.get(i-8);
                    sort.set(i-8,sort.get(j-8));                    
                    sort.set(j-8,tmp8);
                    
                    String tmp9 = sort.get(i-9);
                    sort.set(i-9,sort.get(j-9));                    
                    sort.set(j-9,tmp9);
                }          
            }
        }
        
        
//   The required value of the user is now searched in the arraylist.
        String x = search_field_price.getText();
        int result = sort(sort,x);       
        
//        if the value is not found then an error dialog box is sent to the user.
        if (result == -1){
            JOptionPane.showMessageDialog(null, "The result you have been searching is not found.");        
        } else {           
//            if value is found then a dialog box is shown with all the values.
            String a = "The result you have been searching is found:" + 
                    "\n" +  "\n" + 
                    "The name of the rider is: " + sort.get(result-9) +
                    "\n" +
                    "Age is: " + sort.get(result-8) +
                    "\n" + 
                    "Address is: " + sort.get(result-7) +
                    "\n" + 
                    "Phone no. is: " + sort.get(result-6) +
                    "\n" + 
                    "Bike model name is: " + sort.get(result-5) +
                    "\n" + 
                    "Bike no. is: " + sort.get(result-4) +
                    "\n" + 
                    "Kms drove is: " + sort.get(result-3) +
                    "\n" + 
                    "Chassis no. is: " + sort.get(result-2) +
                    "\n" + 
                    "Last Servicing is: " + sort.get(result-1) +
                    "\n" + 
                    "Price is: " + sort.get(result);

            JOptionPane.showMessageDialog(null, a);
        }       
        sort.clear(); 
    }//GEN-LAST:event_search_priceActionPerformed

    private void last_servicingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_last_servicingActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_last_servicingActionPerformed

    private void priceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_priceActionPerformed

    private void aActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aActionPerformed

    private void nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameActionPerformed

    private void search_modelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_modelActionPerformed
        // TODO add your handling code here:
//        This is linear search
        int rowCount = jTable.getRowCount();
        int colCount = jTable.getColumnCount(); 
        int nextRow = 0;
        int nextCol = 0;
        boolean empty = false; //row is empty, data can be added.
//        all the values from the table is added to the arraylist.
        do {
            
            String a= (String) jTable.getValueAt(nextRow,nextCol); 
            if (a != null && a.length()!=0){
                for (int i=0; i<10;i++){
                    String w= (String) jTable.getValueAt(nextRow,i);
                    main.add(w);                
                }
                nextRow++;
            } else {
                empty = true;
            }
        } while (nextRow < rowCount && !empty);  
//        System.out.println(main);
//        the value that is ggiven by the user is searched through all the values of bike model on the table.
        for (int i=4; i<main.size();i=i+10){
            if (search_field_model.getText().equals(main.get(i))){
                String a = "The result you have been searching is found:" + 
                    "\n" +  "\n" + 
                    "The name of the rider is: " + main.get(i-4) +
                    "\n" +
                    "Age is: " + main.get(i-3) +
                    "\n" + 
                    "Address is: " + main.get(i-2) +
                    "\n" + 
                    "Phone no. is: " + main.get(i-1) +
                    "\n" + 
                    "Bike model name is: " + main.get(i) +
                    "\n" + 
                    "Bike no. is: " + main.get(i+1) +
                    "\n" + 
                    "Kms drove is: " + main.get(i+2) +
                    "\n" + 
                    "Chassis no. is: " + main.get(i+3) +
                    "\n" + 
                    "Last Servicing is: " + main.get(i+4) +
                    "\n" + 
                    "Price is: " + main.get(i+5);

            JOptionPane.showMessageDialog(null, a);    
            break;
            } else {
                JOptionPane.showMessageDialog(null, "The result you have been searching is not found.");  
                break;
            }
        }        
//        clearing value from arratlist.
        main.clear(); 
        
        
    }//GEN-LAST:event_search_modelActionPerformed

    private void search_field_modelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_field_modelActionPerformed
        // TODO add your handling code here:    
    }//GEN-LAST:event_search_field_modelActionPerformed

    private void exit_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exit_buttonActionPerformed
        // TODO add your handling code here:
//        exits the button through shortcout or by pressing exit button in menu list.
        exit_button.setMnemonic(KeyEvent.VK_E);
        System.exit(0);
        
        
    }//GEN-LAST:event_exit_buttonActionPerformed

    private void help_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_help_buttonActionPerformed
        // TODO add your handling code here:
        
        
//        opens help file
//        try  
//        {  
//        //constructor of file class having file as argument  
//            File file = new File("C:\\Users\\Acer\\OneDrive\\Desktop\\file\\Help.txt"); 
//            
//            if(!Desktop.isDesktopSupported())//check if Desktop is supported by Platform or not  
//            {  
//                System.out.println("not supported");  
//                return;  
//            }  
////            checks if the file exits in the desktop and opens it.
//            Desktop OPEN = Desktop.getDesktop();  
//            if(file.exists())         //checks file exists or not  
//                OPEN.open(file);              //opens the specified file  
//        }  
//        catch(Exception e)  
//        {  
//            e.printStackTrace();  
//        }  
        
        
            if(Desktop.isDesktopSupported())
            {
                File path =new File("Help.txt");
                try {
                    Desktop.getDesktop().open(path);
                } catch (Exception e) {
                    
                }
            }
        
    }//GEN-LAST:event_help_buttonActionPerformed

    private void open_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_open_buttonActionPerformed
        // TODO add your handling code here:
//        opens a file chooser from where we can open a file.
        open_button.setMnemonic(KeyEvent.VK_O);
        JFileChooser chooser = new JFileChooser();
        Scanner in = null;
        
        if (chooser.showOpenDialog(null)== JFileChooser.APPROVE_OPTION){
            File selectedFile = chooser.getSelectedFile();
            try {            
                in = new Scanner(selectedFile);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(CAD_INFO.class.getName()).log(Level.SEVERE, null, ex);
            }
            int lineNumber = 1;
            final int Max_Lines = 1000;
            while (in.hasNextLine() && lineNumber <= Max_Lines){
                String line = in.nextLine();
                main.add(line);
                lineNumber++;      
                DefaultTableModel model = (DefaultTableModel) jTable.getModel();
                model.setRowCount(0);
                model.setRowCount(12);
            }
            if (in.hasNextLine()){
                System.out.println("...");
            }
        }
        
        if(Desktop.isDesktopSupported())
            {
                File path =new File("a.pdf");
                try {
                    Desktop.getDesktop().open(path);
                } catch (Exception e) {
                    
                }
            }
        
//        calls another method which opens the file and puts all the values of the file to the table.
        add_file();
    }//GEN-LAST:event_open_buttonActionPerformed

    private void ageKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ageKeyPressed
        // TODO add your handling code here:
//        lets the user to put only integer in the textfield.
        char character = evt.getKeyChar();
        int keycode = evt.getKeyCode();
            if (!(Character.isDigit(character) || keycode == 8 || keycode == 127 || keycode == 37 || keycode == 39)){
            age.setEditable(false);
        } else {
            age.setEditable(true);
        }
        
    }//GEN-LAST:event_ageKeyPressed

    private void phone_numberKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_phone_numberKeyPressed
        // TODO add your handling code here:
        //        lets the user to put only integer in the textfield.
        char character = evt.getKeyChar();
        int keycode = evt.getKeyCode();
            if (!(Character.isDigit(character) || keycode == 8 || keycode == 127 || keycode == 37 || keycode == 39)){
            phone_number.setEditable(false);
        } else {
            phone_number.setEditable(true);
        }  
        
    }//GEN-LAST:event_phone_numberKeyPressed

    private void chassis_numberKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_chassis_numberKeyPressed
        // TODO add your handling code here:
        
        //        lets the user to put only integer in the textfield.
        char character = evt.getKeyChar();
        int keycode = evt.getKeyCode();
            if (!(Character.isDigit(character) || keycode == 8 || keycode == 127 || keycode == 37 || keycode == 39)){
            chassis_number.setEditable(false);
        } else {
            chassis_number.setEditable(true);
        }
        
    }//GEN-LAST:event_chassis_numberKeyPressed

    private void priceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_priceKeyPressed
        // TODO add your handling code here:
        
        //        lets the user to put only integer in the textfield.
        char character = evt.getKeyChar();
        int keycode = evt.getKeyCode();
            if (!(Character.isDigit(character) || keycode == 8 || keycode == 127 || keycode == 37 || keycode == 39)){
               price.setEditable(false);
            } else {
                price.setEditable(true);
            }        
    }//GEN-LAST:event_priceKeyPressed

    private void nameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nameKeyPressed
        // TODO add your handling code here:
        
        //  does not let the user put space if the textfield is empty.
        char character = evt.getKeyChar();
        int keycode = evt.getKeyCode();
        if (name.getText().length()==0){
            if (keycode == 32){
            name.setEditable(false);
        } else {
            name.setEditable(true);
        }
        }
        
    }//GEN-LAST:event_nameKeyPressed

    private void addressKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_addressKeyPressed
        // TODO add your handling code here:
        
                //  does not let the user put space if the textfield is empty.
        char character = evt.getKeyChar();
        int keycode = evt.getKeyCode();
        if (address.getText().length()==0){
            if (keycode == 32){
            address.setEditable(false);
        } else {
            address.setEditable(true);
        }
        }
    }//GEN-LAST:event_addressKeyPressed

    private void bike_numberKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bike_numberKeyPressed
        // TODO add your handling code here:
        
                //  does not let the user put space if the textfield is empty.
        char character = evt.getKeyChar();
        int keycode = evt.getKeyCode();
        if (bike_number.getText().length()==0){
            if (keycode == 32){
            bike_number.setEditable(false);
        } else {
            bike_number.setEditable(true);
        }
        }
    }//GEN-LAST:event_bike_numberKeyPressed

    private void last_servicingKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_last_servicingKeyPressed
        // TODO add your handling code here:
        
                //  does not let the user put space if the textfield is empty.
        char character = evt.getKeyChar();
        int keycode = evt.getKeyCode();
        System.out.println(keycode);
        if (last_servicing.getText().length()==0){
            if (keycode == 32){
            last_servicing.setEditable(false);
        } else {
            last_servicing.setEditable(true);
        }
        }
    }//GEN-LAST:event_last_servicingKeyPressed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CAD_INFO.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CAD_INFO.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CAD_INFO.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CAD_INFO.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CAD_INFO().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu Help;
    private javax.swing.JRadioButton a;
    private javax.swing.JButton add;
    private javax.swing.JTextField address;
    private javax.swing.JLabel address_label;
    private javax.swing.JTextField age;
    private javax.swing.JLabel age_label;
    private javax.swing.JRadioButton b;
    private javax.swing.JLabel bike_no_label;
    private javax.swing.JTextField bike_number;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JRadioButton c;
    private javax.swing.JLabel chasno_label;
    private javax.swing.JTextField chassis_number;
    private javax.swing.JButton clear;
    private javax.swing.JRadioButton d;
    private javax.swing.JComboBox drove;
    private javax.swing.JLabel drove_label;
    private javax.swing.JButton exit;
    private javax.swing.JMenuItem exit_button;
    private javax.swing.JMenu file;
    private javax.swing.JMenuItem help_button;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JSplitPane jSplitPane2;
    private javax.swing.JTable jTable;
    private javax.swing.JTextField last_servicing;
    private javax.swing.JLabel model_label;
    private javax.swing.JTextField name;
    private javax.swing.JLabel name_label;
    private javax.swing.JMenuItem open_button;
    private javax.swing.JTextField phone_number;
    private javax.swing.JLabel pno_label;
    private javax.swing.JTextField price;
    private javax.swing.JLabel price_label;
    private javax.swing.JTextField search_field_model;
    private javax.swing.JTextField search_field_price;
    private javax.swing.JButton search_model;
    private javax.swing.JButton search_price;
    private javax.swing.JLabel service_label;
    // End of variables declaration//GEN-END:variables

    
    @Override
    public void actionPerformed(ActionEvent ae) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        
    }

    @Override
    public void keyTyped(KeyEvent ke) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void keyPressed(KeyEvent ke) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void keyReleased(KeyEvent ke) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void menuSelected(MenuEvent me) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void menuDeselected(MenuEvent me) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void menuCanceled(MenuEvent me) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}

